const density = 'Ñ@#W$9876543210?!abc;:+=-,._ ';

let paisin;

function preload() {
  paisin=loadImage("./paisin_pixeled.png")
  }

function setup() {
  createCanvas(400, 400);
}

function draw() {
  
  background(0);
   // Draw one image at full size at (0,0);
  //image(paisin, 0, 0, width, height);


/*Conocer los rangos verdaderos de las imagenes */
let w = width/paisin.width;
let h = height/paisin.height;

/*Cargamos los pixeles de la imagen */
paisin.loadPixels(); /*Esta funcion siempre debe ser llamada al manipular pixels[] */

/*ARREGLO DE PIXELES RGB */
for(let i=0;i<paisin.width;i++){
  for(let j=0;j<paisin.height;j++){
    const pixelIndex=(i+j*paisin.width)*4;
    const r=paisin.pixels[pixelIndex + 0];
    const b=paisin.pixels[pixelIndex + 1];
    const g=paisin.pixels[pixelIndex + 2];
    const avg=(r + g + b)/3;

    noStroke();
  fill(avg);
 //square(i*w,j*h,w); // filter or somn like that

  //const len = density.length;
  //const charIndex = floor(map(avg,0,255,0,len));
  textSize(w);
  text('G',i*w,j*h);
  }
}

}


//////
// Image to ASCII
// The Coding Train / Daniel Shiffman
// https://thecodingtrain.com/CodingChallenges/166-ascii-image.html
// https://youtu.be/55iwMYv8tGI

// ASCII video: https://editor.p5js.org/codingtrain/sketches/KTVfEcpWx
// ASCII image canvas: https://editor.p5js.org/codingtrain/sketches/r4ApYWpH_
// ASCII image DOM: https://editor.p5js.org/codingtrain/sketches/ytK7J7d5j
// ASCII image source text: https://editor.p5js.org/codingtrain/sketches/LNBpdYQHP
// ASCII image weather API: https://editor.p5js.org/codingtrain/sketches/DhdqcoWn4


const density = "Ñ@#W$9876543210?!abc;:+=-,._ ";

let gloria;

function preload() {
  gloria = loadImage("./Screenshot_1.jpg");
}

function setup() {
  createCanvas(1200,1200)
  gloria.loadPixels();
  for (let j = 0; j < gloria.height; j++) {
    let row = "";
    for (let i = 0; i < gloria.width; i++) {
      const pixelIndex = (i + j * gloria.width) * 4;
      const r = gloria.pixels[pixelIndex + 0];
      const g = gloria.pixels[pixelIndex + 1];
      const b = gloria.pixels[pixelIndex + 2];

      const avg = (r + g + b) / 3;

      const len = density.length;
      const charIndex = floor(map(avg, 0, 255, len, 0));

      const c = density.charAt(charIndex);
      if (c == " ") row += "&nbsp;";
      else row += c;
    }
    createDiv(row);
  }
}
